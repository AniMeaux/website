.ModalOverlay {
  z-index: var(--z-index-modal);
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overscroll-behavior: none;
  cursor: pointer;
}

.ModalOverlay--bottomSheet {
  animation-fill-mode: forwards;
  animation-duration: var(--duration-slow);
  background: var(--dark-200);
}

.ModalOverlay--bottomSheet.ModalOverlay--isOpened {
  animation-name: animation-fade-in;
  animation-timing-function: var(--ease-enter);
}

.ModalOverlay--bottomSheet.ModalOverlay--isClosed {
  animation-name: animation-fade-out;
  animation-timing-function: var(--ease-exit);
}

.Modal {
  z-index: var(--z-index-modal);
  overscroll-behavior: none;
  box-shadow: var(--shadow-m);
  background: var(--bg-primary);
  animation-fill-mode: forwards;
}

.Modal--dropdown {
  border-radius: var(--border-radius-m);
  min-width: 350px;
  animation-duration: var(--duration-fast);
}

.Modal--dropdown[data-placement="top-start"] {
  transform-origin: bottom left;
}

.Modal--dropdown[data-placement="top"] {
  transform-origin: bottom center;
}

.Modal--dropdown[data-placement="top-end"] {
  transform-origin: bottom right;
}

.Modal--dropdown[data-placement="bottom-start"] {
  transform-origin: top left;
}

.Modal--dropdown[data-placement="bottom"] {
  transform-origin: top center;
}

.Modal--dropdown[data-placement="bottom-end"] {
  transform-origin: top right;
}

/*
 * Don't start the animation if there are no `data-placement`, because it means
 * the dropdown is not yet positioned.
 */
.Modal--dropdown.Modal--isOpened[data-placement] {
  animation-name: animation-fade-in, animation-scale-in;
  animation-timing-function: var(--ease-enter);
}

.Modal--dropdown.Modal--isOpened[data-placement="bottom"],
.Modal--dropdown.Modal--isOpened[data-placement="top"] {
  animation-name: animation-fade-in, animation-scale-in-y;
  animation-timing-function: var(--ease-enter);
}

.Modal--dropdown.Modal--isClosed[data-placement] {
  animation-name: animation-fade-out, animation-scale-out;
  animation-timing-function: var(--ease-exit);
}

.Modal--dropdown.Modal--isClosed[data-placement="bottom"],
.Modal--dropdown.Modal--isClosed[data-placement="top"] {
  animation-name: animation-fade-out, animation-scale-out-y;
  animation-timing-function: var(--ease-exit);
}

.Modal--bottomSheet {
  position: fixed;
  left: 0;
  bottom: 0;
  right: 0;
  max-height: 100vh;
  overflow: auto;
  animation-duration: var(--duration-slow);
  border-top-left-radius: var(--border-radius-l);
  border-top-right-radius: var(--border-radius-l);
  padding-top: 0;
  padding-top: env(safe-area-inset-top, 0);
  padding-right: 0;
  padding-right: env(safe-area-inset-right, 0);
  padding-bottom: 0;
  padding-bottom: env(safe-area-inset-bottom, 0);
  padding-left: 0;
  padding-left: env(safe-area-inset-left, 0);
}

.Modal--bottomSheet.Modal--isOpened {
  animation-name: animation-bottom-slide-in;
  animation-timing-function: var(--ease-enter);
}

.Modal--bottomSheet.Modal--isClosed {
  animation-name: animation-bottom-slide-out;
  animation-timing-function: var(--ease-exit);
}

.ModalHeader {
  width: 100%;
  border-bottom: 1px solid var(--border-color);
  padding: var(--spacing-s) var(--spacing-l);
  display: flex;
  align-items: center;
}

.ModalHeader--dense {
  padding-left: var(--spacing-s);
  padding-right: var(--spacing-s);
}

.ModalHeader > *:not(:first-child) {
  margin-left: var(--spacing-l);
}

.ModalHeaderTitle {
  padding-left: var(--spacing-l);
}
